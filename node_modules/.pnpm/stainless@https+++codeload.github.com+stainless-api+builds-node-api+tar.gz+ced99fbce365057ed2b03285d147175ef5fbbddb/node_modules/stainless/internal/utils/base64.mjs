// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { StainlessError } from "../../error.mjs";
export const toBase64 = (data) => {
    if (!data)
        return '';
    if (typeof data === 'string') {
        data = new globalThis.TextEncoder().encode(data);
    }
    if (typeof globalThis.Buffer !== 'undefined') {
        return globalThis.Buffer.from(data).toString('base64');
    }
    if (typeof btoa !== 'undefined') {
        return btoa(String.fromCharCode.apply(null, data));
    }
    throw new StainlessError('Cannot generate base64 string; Expected `Buffer` or `btoa` to be defined');
};
export const fromBase64 = (str) => {
    if (typeof globalThis.Buffer !== 'undefined') {
        return new Uint8Array(globalThis.Buffer.from(str, 'base64'));
    }
    if (typeof atob !== 'undefined') {
        return new Uint8Array(atob(str)
            .split('')
            .map((c) => c.charCodeAt(0)));
    }
    throw new StainlessError('Cannot decode base64 string; Expected `Buffer` or `atob` to be defined');
};
//# sourceMappingURL=base64.mjs.map